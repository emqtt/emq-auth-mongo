name: Run test cases

on: [push, pull_request]

jobs:    
    run_test_cases:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                mongo_image:
                    - mongo:3
                    - mongo:4
      
        steps:
            - name: install docker-compose
              run: | 
                sudo curl -L "https://github.com/docker/compose/releases/download/1.25.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
                sudo chmod +x /usr/local/bin/docker-compose
            - uses: actions/checkout@v1
            - name: run test cases
              env:
                  MONGO_IMAGE: ${{ matrix.mongo_image }}
              run: |
                docker-compose -f ./docker-compose.yml -p tests up -d
                docker exec -i $(docker ps -a -f name=tests_erlang_1 -q) sh -c "sed -i '/auth.mongo.server/c auth.mongo.server = mongo_server:27017' /emqx_auth_mongo/etc/emqx_auth_mongo.conf"
                docker exec -i tests_erlang_1 sh -c "make -C /emqx_auth_mongo xref"
                docker exec -i tests_erlang_1 sh -c "make -C /emqx_auth_mongo eunit"
                docker exec -i tests_erlang_1 sh -c "make -C /emqx_auth_mongo ct"
                docker exec -i tests_erlang_1 sh -c "make -C /emqx_auth_mongo cover"
            - uses: actions/upload-artifact@v1
              if: always()
              with:
                name: logs_for_${{ matrix.mongo_image }}
                path: _build/test/logs
            - uses: actions/upload-artifact@v1
              with:
                name: cover_for_${{ matrix.mongo_image }}
                path: _build/test/cover

